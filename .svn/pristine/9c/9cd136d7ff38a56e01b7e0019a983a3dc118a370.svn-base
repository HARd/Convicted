using UnityEngine;
using System.Collections;
using System.Collections.Generic;
using System.IO;
using System.Xml;

public class CharacterGenerator
{
	public static void GenerateCharacter(int id)
	{
		ClearGame();
		PlayerInfo.Instance.body = MainMenu.Instance.charactersList [id].body;
		PlayerInfo.Instance.charisma = MainMenu.Instance.charactersList [id].charisma;
		PlayerInfo.Instance.mind = MainMenu.Instance.charactersList [id].mind;
		PlayerInfo.Instance.inmate_rep = MainMenu.Instance.charactersList [id].inmate_rep;
		PlayerInfo.Instance.guard_rep = MainMenu.Instance.charactersList [id].guard_rep;
		PlayerInfo.Instance.charImageID = MainMenu.Instance.charactersList [id].image_id;
		PlayerInfo.Instance.consealment = MainMenu.Instance.charactersList [id].consealment;

		switch(MainMenu.Instance.charactersList [id].tier)
		{
		case 0:
			break;
		case 1:
			BuyTraits(1,0,0,1);
			break;
		case 2:
			BuyTraits(1,1,0,2);
			break;
		case 3:
			BuyTraits(0,2,0,2);
			break;
		case 4:
			BuyTraits(0,2,1,2);
			break;
		case 5:
			BuyTraits(0,2,1,1);
			break;
		}
	}

	static void BuyTraits(float tier1, float tier2, float tier3, float negative)
	{
		int x = 0;
		while((tier1+tier2+tier3+negative) > 0)
		{
			x = Mathf.FloorToInt(Random.Range(0, PlayerInfo.Instance.traitList.Count));
			Trait trait = PlayerInfo.Instance.traitList[x];
			if(!trait.status && !trait.hidden && CheckExclude(trait.exclude))
			{
				if(!trait.negative)
				{
					if(trait.cost == 10 && tier1 > 0)
					{
						ChangeTrait(trait);
						tier1--;
					}
					else if(trait.cost == 20 && tier2 > 0)
					{
						ChangeTrait(trait);
						tier2--;
					}
					else if(trait.cost == 30 && tier3 > 0)
					{
						ChangeTrait(trait);
						tier3--;
					}
				}
				else
				{
					if(negative > 0)
					{
						ChangeTrait(trait);
						negative--;
					}
				}
			}
		}
	}

	static void ChangeTrait(Trait trait)
	{
		trait.status = true;
		trait.Applay();
	}

	static void ClearGame()
	{
		PlayerInfo.Instance.body = 0;
		PlayerInfo.Instance.charisma = 0;
		PlayerInfo.Instance.mind = 0;

		PlayerInfo.Instance.ResetTraitList();
	}


	static bool CheckExclude(string check)
	{
		return PlayerInfo.Instance.traitList.Exists(t => t.name == check);
	}
}
